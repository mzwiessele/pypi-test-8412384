[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"


[project]
name = "pypi_test_8412384"
authors = [
    {name = "Max Zwiessele", email = "max.zwiessele@fefundinfo.com"},
    {name = "AI Enhanced Services Team", email = "ai_team@fefundinfo.con"},
]
description = "Training and running email intent AI models in python"
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
]
dynamic = ["dependencies", "version"]


[project.scripts]
test-cli = "pypi_test_8412384.cli.main:cli"


[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }
version = {attr = "pypi_test_8412384.VERSION"}


[project.optional-dependencies]
dev = [
    "black", "ruff", 
    "pytest", "pytest-cov", "pytest-mock",
    "twine", "build", "bump-my-version"
]


[tool.setuptools]
packages = ["pypi_test_8412384"]


[tool.ruff]
extend-select = [
    "N", # Naming conventions
    "F", "I", # Imports
    "E", "W", # Codestyle
    "D2", "D4" # Docstyle
]
extend-ignore = ["D212", "D211"]
line-length = 80
target-version = "py311"
fix = true


[tool.black]
line-length = 80


[tool.bumpversion]
allow_dirty = false
commit = false
message = "Bump version: {current_version} → {new_version}"
commit_args = ""
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = [
    "{major}.{minor}.{patch}"
]
search = "{current_version}"
replace = "{new_version}"

[[tool.bumpversion.files]]
filename = "pypi_test_8412384/__init__.py"

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "Unreleased"

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "{current_version}...HEAD"
replace = "{current_version}...{new_version}"
