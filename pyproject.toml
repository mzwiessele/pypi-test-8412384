[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"


[project]
name = "pypi_test_8412384"
authors = [
    {name = "Max Zwiessele", email = "max.zwiessele@fefundinfo.com"},
    {name = "AI Enhanced Services Team", email = "ai_team@fefundinfo.con"},
]
description = "Training and running email intent AI models in python"
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
]
dynamic = ["dependencies", "version"]


[project.scripts]
test-cli = "pypi_test_8412384.cli.main:cli"


[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }
version = {attr = "pypi_test_8412384.VERSION"}


[project.optional-dependencies]
dev = [
    "black", "ruff", 
    "pytest", "pytest-cov", "pytest-mock",
    "twine", "build",
    "python-semantic-release"
]


[tool.semantic_release]
version_variables = [
    "pypi_test_8412384/__init__.py:VERSION"
]
build_command = "python -m build"

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = true

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
    "breaking",
]
major_tags = ["breaking"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]


[tool.setuptools]
packages = ["pypi_test_8412384"]


[tool.ruff]
extend-select = [
    "N", # Naming conventions
    "F", "I", # Imports
    "E", "W", # Codestyle
    "D2", "D4" # Docstyle
]
extend-ignore = ["D212", "D211"]
line-length = 80
target-version = "py311"
fix = true


[tool.black]
line-length = 80